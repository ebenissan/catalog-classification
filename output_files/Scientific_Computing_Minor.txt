of Engineering may also be counted toward fulfilling the minor.Quantum Information Science and Engineering MinorFaculty in the School of Engineering and the College of Arts and Science offer an interdisciplinary minor in QuantumInformation Science and Engineering (QISE). The minor is administered by the College of Arts and Science. See theA&S section of the catalog for details.Scientific Computing MinorDIRECTORS Robert E. Bodenheimer, Thomas J. Palmeri, David A. Weintraub Affiliated FacultyPROFESSORS Ralf Bennartz (Earth and Environmental Sciences), Gautam Biswas (Electrical Engineering andComputer Science), Robert E. Bodenheimer Jr. (Computer Science), Mark N. Ellingham (Mathematics), David Furbish(Earth and Environmental Sciences), Guilherme Gualda (Earth and Environmental Sciences), Kelly Holley-Bockelman(Astronomy), Shane Hutson (Physics), Bennett Landman (Electrical and Computer Engineering), Gordon D. Logan(Psychology), Haoxiang Luo (Mechanical Engineering), Terry P. Lybrand (Chemistry and Pharmacology), Michael I.Miga (Biomedical Engineering), Mark Neamtu (Mathematics), Thomas J. Palmeri (Psychology and Neuroscience),Antonis Rokas (Biological Sciences), Jeffrey D. Schall (Psychology and Neuroscience), Larry Schumaker(Mathematics), Paul Sheldon (Physics), Kalman Varga (Physics), David A. Weintraub (Astronomy)PROFESSOR OF THE PRACTICE Gerald H. Roth (Computer Science)ASSOCIATE PROFESSORS Sean Polyn (Psychology and Neuroscience), Jennifer Trueblood (Psychology), Greg Walker(Mechanical Engineering), Steve Wernke (Anthropology)ASSISTANT PROFESSOR William Holmes (Physics and Astronomy) COURSES OFFERED: SC Faculty in the School of Engineering and the College of Arts and Science offer an interdisciplinary minor in scientificcomputing to help natural and social scientists and engineers acquire the ever-increasing computational skills thatsuch careers demand. The minor is administered by the School of Engineering. Students who complete this minorwill have a toolkit that includes programming skills useful for simulating physical, biological, and social dynamics, aswell as an understanding of how to take advantage of modern software tools to extract meaningful information fromsmall and large datasets. Computation is now an integral part of modern science and engineering. In science, computer simulation allows thestudy of natural phenomena impossible or intractable through experimental means. In engineering, computersimulation allows the analysis and synthesis of systems too expensive, dangerous, or complex to model and builddirectly. Astronomers studying the formation of massive black holes, neuroscientists studying neural networks forhuman memory, mechanical engineers studying the designs of turbines and compressors, and electrical engineersstudying the reliability of electronics aboard spacecraft are united both in the computational challenges they faceand the tools and techniques they use to solve these challenges. Students in the program in scientific computing are taught techniques for understanding such complex physical,biological, and also social systems. Students are introduced to computational methods for simulating and analyzingmodels of complex systems, to scientific visualization and data mining techniques needed to detect structure inmassively large multidimensional data sets, to high performance computing techniques for simulating models oncomputing clusters with hundreds or thousands of parallel, independent processors and for analyzing terabytes ormore of data that may be distributed across a massive cloud or grid storage environment. Scientific computing at Vanderbilt is supported by faculty and includes students from a wide range of scientific andPage 235 of 1019 
engineering disciplines. While the content domain varies, these disciplines often require similar computationalapproaches, high-performance computing resources, and skills to simulate interactions, model real-life systems, andtest competing hypotheses. Scientific computing embodies the computational tools and techniques for solving manyof the grand challenges facing science and engineering today. The minor in scientific computing prepares students for advanced coursework that combines computationalapproaches with a substantive area of science or engineering. It prepares students for independent study with afaculty member on a research project. It prepares students for advanced study in graduate school. It provides skillsthat will be attractive to many employers after graduation. The minor in scientific computing is distinct from the minor in computer science. Scientific computing usescomputation as a tool to solve scientific and engineering problems in research and application. It is more focused onsimulation, numerical techniques, high performance computing, and higher-level methods than the minor incomputer science, which is focused on the algorithms, systems, and technologies that enable such methods to bedeveloped and employed. The minor in scientific computing requires 15 credit hours, distributed as follows: 1. CS 1101 or 1103 or 11043 hours2. CS 2204 (CS 2201 may be substituted for 2204 with the approval of a program director)3 hours3. Elective courses. Three hours must come from course list A (Mathematical, Quantitative, and Data ScienceMethods); three hours must come from course list B (Computational, Simulation, and Modeling Methods); andthree hours can come from either course list A or B, or from independent study (SC 3850/3851) with a facultymember affiliated with the SC minor.9 hoursTotal:15 hours A. Computational, Simulation, and Modeling MethodsSC 3250 Scientific Computing ToolboxANTH 3261 Introduction to Geographic Information Systems and Remote SensingBMIF 6310 Foundations of BioinformaticsBMIF 7380 Data Privacy in BiomedicineBSCI 3272 Genome ScienceBME 2400 Quantitative Methods I: Statistical AnalysisCE 4320 Data Analytics for EngineersECON 3032 Applied EconometricsECON 3035 Econometric MethodsECON 3750 Econometrics for Big DataPage 236 of 1019 